# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
defaults: &defaults
  working_directory: ~/beta_babies
  docker:
    - image: elixir:1.8.0
      environment:
        MIX_ENV: test
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: cars123

aliases:
  - &step_wait_for_db
    name: Wait for DB
    command: |
      apt-get update
      apt install postgresql-client -y
      ATTEMPTS=10
      until PGPASSWORD=cars123 psql -h 127.0.0.1 -U postgres -d postgres -c "select 1" > /dev/null 2>&1; do
        if [ $ATTEMPTS -eq 0 ]; then
          echo "Unable to connect to postgres!!"
          exit 1
        fi
        echo "Waiting for postgres server, $((ATTEMPTS--)) remaining attempts..."
        sleep 1
      done

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependency-cache-{{ checksum "mix.lock" }}
            - v2-dependency-cache
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix compile
      - run:
          command: mix compile
          environment:
            MIX_ENV: test
      - save_cache:
          key: v2-dependency-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - deps
            - ~/.mix
      - persist_to_workspace:
          root: ~/
          paths:
            - beta_babies
            - .mix

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run: *step_wait_for_db
      - run:
          name: Run tests
          command: mix test --trace

  format:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run formatter
          command: mix format --check-formatted

workflows:
  version: 2
  conga_line:
    jobs:
      - build
      - test:
          requires:
            - build
      - format:
          requires:
            - build
